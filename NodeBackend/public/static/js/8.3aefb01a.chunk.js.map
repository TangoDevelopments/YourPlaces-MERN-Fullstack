{"version":3,"sources":["places/pages/NewPlace.js"],"names":["NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled"],"mappings":"kiNAyGeA,UAxFE,WACf,IAAMC,EAAOC,qBAAWC,KACxB,EAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAkCC,YAAQ,CACxCC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAfb,mBAAOI,EAAP,KAAkBC,EAAlB,KAmBMC,EAAUC,cAEVC,EAAkB,uCAAG,WAAOC,GAAP,8EACzBA,EAAMC,iBADmB,UAGjBC,EAAW,IAAIC,UACZC,OAAO,QAAST,EAAUU,OAAOhB,MAAMC,OAChDY,EAASE,OAAO,cAAeT,EAAUU,OAAOb,YAAYF,OAC5DY,EAASE,OAAO,UAAWT,EAAUU,OAAOZ,QAAQH,OACpDY,EAASE,OAAO,QAAST,EAAUU,OAAOX,MAAMJ,OAPzB,SASjBJ,EACJoB,uDACA,OACAJ,EACA,CACEK,cAAe,UAAY3B,EAAK4B,QAdb,OAiBvBX,EAAQY,KAAK,KAjBU,4GAAH,sDAqBxB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAYzB,MAAOA,EAAO0B,QAASxB,IACnC,0BAAMyB,UAAU,aAAaC,SAAUd,GACpCf,GAAa,kBAAC,IAAD,CAAgB8B,WAAS,IACvC,kBAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAAS1B,IAEX,kBAAC,IAAD,CACEmB,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,4DACVC,QAAS1B,IAEX,kBAAC,IAAD,CACEmB,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,CAACC,eACbC,UAAU,gCACVC,QAAS1B,IAEX,kBAAC,IAAD,CACEmB,GAAG,QACHO,QAAS1B,EACTyB,UAAU,6BAEZ,kBAAC,IAAD,CAAQJ,KAAK,SAASO,UAAW7B,EAAUJ,SAA3C","file":"static/js/8.3aefb01a.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm({\r\n    title: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    address: {\r\n      value: \"\",\r\n      isValid: false,\r\n    },\r\n    image: {\r\n      value: null,\r\n      isValid: false\r\n    }\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('title', formState.inputs.title.value)\r\n      formData.append('description', formState.inputs.description.value)\r\n      formData.append('address', formState.inputs.address.value)\r\n      formData.append('image', formState.inputs.image.value)\r\n\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}